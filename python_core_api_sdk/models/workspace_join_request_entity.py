# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from python_core_api_sdk.models.base_model import Model
from python_core_api_sdk import util


class WorkspaceJoinRequestEntity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, status: str=None, workspace_id: str=None, user_id: str=None, created_at: datetime=None):
        """WorkspaceJoinRequestEntity - a model defined in OpenAPI

        :param id: The id of this WorkspaceJoinRequestEntity.
        :param status: The status of this WorkspaceJoinRequestEntity.
        :param workspace_id: The workspace_id of this WorkspaceJoinRequestEntity.
        :param user_id: The user_id of this WorkspaceJoinRequestEntity.
        :param created_at: The created_at of this WorkspaceJoinRequestEntity.
        """
        self.openapi_types = {
            'id': str,
            'status': str,
            'workspace_id': str,
            'user_id': str,
            'created_at': datetime
        }

        self.attribute_map = {
            'id': 'id',
            'status': 'status',
            'workspace_id': 'workspaceId',
            'user_id': 'userId',
            'created_at': 'createdAt'
        }

        self._id = id
        self._status = status
        self._workspace_id = workspace_id
        self._user_id = user_id
        self._created_at = created_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WorkspaceJoinRequestEntity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WorkspaceJoinRequestEntity of this WorkspaceJoinRequestEntity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this WorkspaceJoinRequestEntity.


        :return: The id of this WorkspaceJoinRequestEntity.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this WorkspaceJoinRequestEntity.


        :param id: The id of this WorkspaceJoinRequestEntity.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def status(self):
        """Gets the status of this WorkspaceJoinRequestEntity.


        :return: The status of this WorkspaceJoinRequestEntity.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this WorkspaceJoinRequestEntity.


        :param status: The status of this WorkspaceJoinRequestEntity.
        :type status: str
        """
        if status is None:
            raise ValueError("Invalid value for `status`, must not be `None`")

        self._status = status

    @property
    def workspace_id(self):
        """Gets the workspace_id of this WorkspaceJoinRequestEntity.


        :return: The workspace_id of this WorkspaceJoinRequestEntity.
        :rtype: str
        """
        return self._workspace_id

    @workspace_id.setter
    def workspace_id(self, workspace_id):
        """Sets the workspace_id of this WorkspaceJoinRequestEntity.


        :param workspace_id: The workspace_id of this WorkspaceJoinRequestEntity.
        :type workspace_id: str
        """
        if workspace_id is None:
            raise ValueError("Invalid value for `workspace_id`, must not be `None`")

        self._workspace_id = workspace_id

    @property
    def user_id(self):
        """Gets the user_id of this WorkspaceJoinRequestEntity.


        :return: The user_id of this WorkspaceJoinRequestEntity.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this WorkspaceJoinRequestEntity.


        :param user_id: The user_id of this WorkspaceJoinRequestEntity.
        :type user_id: str
        """
        if user_id is None:
            raise ValueError("Invalid value for `user_id`, must not be `None`")

        self._user_id = user_id

    @property
    def created_at(self):
        """Gets the created_at of this WorkspaceJoinRequestEntity.


        :return: The created_at of this WorkspaceJoinRequestEntity.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this WorkspaceJoinRequestEntity.


        :param created_at: The created_at of this WorkspaceJoinRequestEntity.
        :type created_at: datetime
        """
        if created_at is None:
            raise ValueError("Invalid value for `created_at`, must not be `None`")

        self._created_at = created_at
