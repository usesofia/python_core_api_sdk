# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from python_core_api_sdk.models.base_model import Model
from python_core_api_sdk import util


class CreateStripeCheckoutSessionRequestDto(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, workspace_id: str=None, price_id: str=None, is_trial: bool=None):
        """CreateStripeCheckoutSessionRequestDto - a model defined in OpenAPI

        :param workspace_id: The workspace_id of this CreateStripeCheckoutSessionRequestDto.
        :param price_id: The price_id of this CreateStripeCheckoutSessionRequestDto.
        :param is_trial: The is_trial of this CreateStripeCheckoutSessionRequestDto.
        """
        self.openapi_types = {
            'workspace_id': str,
            'price_id': str,
            'is_trial': bool
        }

        self.attribute_map = {
            'workspace_id': 'workspaceId',
            'price_id': 'priceId',
            'is_trial': 'isTrial'
        }

        self._workspace_id = workspace_id
        self._price_id = price_id
        self._is_trial = is_trial

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateStripeCheckoutSessionRequestDto':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateStripeCheckoutSessionRequestDto of this CreateStripeCheckoutSessionRequestDto.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def workspace_id(self):
        """Gets the workspace_id of this CreateStripeCheckoutSessionRequestDto.


        :return: The workspace_id of this CreateStripeCheckoutSessionRequestDto.
        :rtype: str
        """
        return self._workspace_id

    @workspace_id.setter
    def workspace_id(self, workspace_id):
        """Sets the workspace_id of this CreateStripeCheckoutSessionRequestDto.


        :param workspace_id: The workspace_id of this CreateStripeCheckoutSessionRequestDto.
        :type workspace_id: str
        """
        if workspace_id is None:
            raise ValueError("Invalid value for `workspace_id`, must not be `None`")

        self._workspace_id = workspace_id

    @property
    def price_id(self):
        """Gets the price_id of this CreateStripeCheckoutSessionRequestDto.


        :return: The price_id of this CreateStripeCheckoutSessionRequestDto.
        :rtype: str
        """
        return self._price_id

    @price_id.setter
    def price_id(self, price_id):
        """Sets the price_id of this CreateStripeCheckoutSessionRequestDto.


        :param price_id: The price_id of this CreateStripeCheckoutSessionRequestDto.
        :type price_id: str
        """
        if price_id is None:
            raise ValueError("Invalid value for `price_id`, must not be `None`")

        self._price_id = price_id

    @property
    def is_trial(self):
        """Gets the is_trial of this CreateStripeCheckoutSessionRequestDto.


        :return: The is_trial of this CreateStripeCheckoutSessionRequestDto.
        :rtype: bool
        """
        return self._is_trial

    @is_trial.setter
    def is_trial(self, is_trial):
        """Sets the is_trial of this CreateStripeCheckoutSessionRequestDto.


        :param is_trial: The is_trial of this CreateStripeCheckoutSessionRequestDto.
        :type is_trial: bool
        """
        if is_trial is None:
            raise ValueError("Invalid value for `is_trial`, must not be `None`")

        self._is_trial = is_trial
