# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from python_core_api_sdk.models.base_model import Model
from python_core_api_sdk import util


class BalancePointResultEntity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount_in_cents: float=None):
        """BalancePointResultEntity - a model defined in OpenAPI

        :param amount_in_cents: The amount_in_cents of this BalancePointResultEntity.
        """
        self.openapi_types = {
            'amount_in_cents': float
        }

        self.attribute_map = {
            'amount_in_cents': 'amountInCents'
        }

        self._amount_in_cents = amount_in_cents

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BalancePointResultEntity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BalancePointResultEntity of this BalancePointResultEntity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount_in_cents(self):
        """Gets the amount_in_cents of this BalancePointResultEntity.


        :return: The amount_in_cents of this BalancePointResultEntity.
        :rtype: float
        """
        return self._amount_in_cents

    @amount_in_cents.setter
    def amount_in_cents(self, amount_in_cents):
        """Sets the amount_in_cents of this BalancePointResultEntity.


        :param amount_in_cents: The amount_in_cents of this BalancePointResultEntity.
        :type amount_in_cents: float
        """

        self._amount_in_cents = amount_in_cents
