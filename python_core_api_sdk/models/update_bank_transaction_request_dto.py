# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from python_core_api_sdk.models.base_model import Model
from python_core_api_sdk import util


class UpdateBankTransactionRequestDto(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, category_id: str=None, competency_date: datetime=None, ignore: bool=None, confirm: bool=None, tag_ids: List[str]=None, legal_nature: str=None):
        """UpdateBankTransactionRequestDto - a model defined in OpenAPI

        :param description: The description of this UpdateBankTransactionRequestDto.
        :param category_id: The category_id of this UpdateBankTransactionRequestDto.
        :param competency_date: The competency_date of this UpdateBankTransactionRequestDto.
        :param ignore: The ignore of this UpdateBankTransactionRequestDto.
        :param confirm: The confirm of this UpdateBankTransactionRequestDto.
        :param tag_ids: The tag_ids of this UpdateBankTransactionRequestDto.
        :param legal_nature: The legal_nature of this UpdateBankTransactionRequestDto.
        """
        self.openapi_types = {
            'description': str,
            'category_id': str,
            'competency_date': datetime,
            'ignore': bool,
            'confirm': bool,
            'tag_ids': List[str],
            'legal_nature': str
        }

        self.attribute_map = {
            'description': 'description',
            'category_id': 'categoryId',
            'competency_date': 'competencyDate',
            'ignore': 'ignore',
            'confirm': 'confirm',
            'tag_ids': 'tagIds',
            'legal_nature': 'legalNature'
        }

        self._description = description
        self._category_id = category_id
        self._competency_date = competency_date
        self._ignore = ignore
        self._confirm = confirm
        self._tag_ids = tag_ids
        self._legal_nature = legal_nature

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateBankTransactionRequestDto':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateBankTransactionRequestDto of this UpdateBankTransactionRequestDto.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this UpdateBankTransactionRequestDto.


        :return: The description of this UpdateBankTransactionRequestDto.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this UpdateBankTransactionRequestDto.


        :param description: The description of this UpdateBankTransactionRequestDto.
        :type description: str
        """

        self._description = description

    @property
    def category_id(self):
        """Gets the category_id of this UpdateBankTransactionRequestDto.


        :return: The category_id of this UpdateBankTransactionRequestDto.
        :rtype: str
        """
        return self._category_id

    @category_id.setter
    def category_id(self, category_id):
        """Sets the category_id of this UpdateBankTransactionRequestDto.


        :param category_id: The category_id of this UpdateBankTransactionRequestDto.
        :type category_id: str
        """

        self._category_id = category_id

    @property
    def competency_date(self):
        """Gets the competency_date of this UpdateBankTransactionRequestDto.


        :return: The competency_date of this UpdateBankTransactionRequestDto.
        :rtype: datetime
        """
        return self._competency_date

    @competency_date.setter
    def competency_date(self, competency_date):
        """Sets the competency_date of this UpdateBankTransactionRequestDto.


        :param competency_date: The competency_date of this UpdateBankTransactionRequestDto.
        :type competency_date: datetime
        """

        self._competency_date = competency_date

    @property
    def ignore(self):
        """Gets the ignore of this UpdateBankTransactionRequestDto.


        :return: The ignore of this UpdateBankTransactionRequestDto.
        :rtype: bool
        """
        return self._ignore

    @ignore.setter
    def ignore(self, ignore):
        """Sets the ignore of this UpdateBankTransactionRequestDto.


        :param ignore: The ignore of this UpdateBankTransactionRequestDto.
        :type ignore: bool
        """

        self._ignore = ignore

    @property
    def confirm(self):
        """Gets the confirm of this UpdateBankTransactionRequestDto.


        :return: The confirm of this UpdateBankTransactionRequestDto.
        :rtype: bool
        """
        return self._confirm

    @confirm.setter
    def confirm(self, confirm):
        """Sets the confirm of this UpdateBankTransactionRequestDto.


        :param confirm: The confirm of this UpdateBankTransactionRequestDto.
        :type confirm: bool
        """

        self._confirm = confirm

    @property
    def tag_ids(self):
        """Gets the tag_ids of this UpdateBankTransactionRequestDto.


        :return: The tag_ids of this UpdateBankTransactionRequestDto.
        :rtype: List[str]
        """
        return self._tag_ids

    @tag_ids.setter
    def tag_ids(self, tag_ids):
        """Sets the tag_ids of this UpdateBankTransactionRequestDto.


        :param tag_ids: The tag_ids of this UpdateBankTransactionRequestDto.
        :type tag_ids: List[str]
        """

        self._tag_ids = tag_ids

    @property
    def legal_nature(self):
        """Gets the legal_nature of this UpdateBankTransactionRequestDto.


        :return: The legal_nature of this UpdateBankTransactionRequestDto.
        :rtype: str
        """
        return self._legal_nature

    @legal_nature.setter
    def legal_nature(self, legal_nature):
        """Sets the legal_nature of this UpdateBankTransactionRequestDto.


        :param legal_nature: The legal_nature of this UpdateBankTransactionRequestDto.
        :type legal_nature: str
        """

        self._legal_nature = legal_nature
