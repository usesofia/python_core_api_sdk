# coding: utf-8

"""
    Sofia Api

    Api principal do sistema Sofia.

    The version of the OpenAPI document: 0.0.9
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.bank_transaction_indicator_entity import BankTransactionIndicatorEntity

class TestBankTransactionIndicatorEntity(unittest.TestCase):
    """BankTransactionIndicatorEntity unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BankTransactionIndicatorEntity:
        """Test BankTransactionIndicatorEntity
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BankTransactionIndicatorEntity`
        """
        model = BankTransactionIndicatorEntity()
        if include_optional:
            return BankTransactionIndicatorEntity(
                id = '',
                pretty_id = '',
                type = '',
                name = '',
                description = '',
                data = None,
                dre_line_outcome_result = openapi_client.models.dre_line_outcome_result_entity.DreLineOutcomeResultEntity(
                    amount_in_cents = 1.337, 
                    ratio = 1.337, ),
                balance_point_result = openapi_client.models.balance_point_result_entity.BalancePointResultEntity(
                    amount_in_cents = 1.337, ),
                mean_result = openapi_client.models.mean_result_entity.MeanResultEntity(
                    amount_in_cents = 1.337, 
                    subcategories = [
                        openapi_client.models.mean_result_subcategory_item_entity.MeanResultSubcategoryItemEntity(
                            subcategory_id = '', 
                            subcategory_name = '', 
                            amount_in_cents = 1.337, )
                        ], ),
                proportion_result = openapi_client.models.proportion_result_entity.ProportionResultEntity(
                    ratio = 1.337, )
            )
        else:
            return BankTransactionIndicatorEntity(
                id = '',
                pretty_id = '',
                type = '',
                name = '',
                description = '',
                data = None,
        )
        """

    def testBankTransactionIndicatorEntity(self):
        """Test BankTransactionIndicatorEntity"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
