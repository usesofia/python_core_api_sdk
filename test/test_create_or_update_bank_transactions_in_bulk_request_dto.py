# coding: utf-8

"""
    Sofia Api

    Api principal do sistema Sofia.

    The version of the OpenAPI document: 0.0.9
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.create_or_update_bank_transactions_in_bulk_request_dto import CreateOrUpdateBankTransactionsInBulkRequestDto

class TestCreateOrUpdateBankTransactionsInBulkRequestDto(unittest.TestCase):
    """CreateOrUpdateBankTransactionsInBulkRequestDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateOrUpdateBankTransactionsInBulkRequestDto:
        """Test CreateOrUpdateBankTransactionsInBulkRequestDto
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateOrUpdateBankTransactionsInBulkRequestDto`
        """
        model = CreateOrUpdateBankTransactionsInBulkRequestDto()
        if include_optional:
            return CreateOrUpdateBankTransactionsInBulkRequestDto(
                items = [
                    openapi_client.models.create_or_update_bank_transactions_in_bulk_item_dto.CreateOrUpdateBankTransactionsInBulkItemDto(
                        account_id = '', 
                        provider = '', 
                        workspace_id = '', 
                        provider_transaction_id = '', 
                        description = '', 
                        posted_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        competency_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        amount = 1.337, 
                        type = '', 
                        status = '', 
                        legal_nature = '', 
                        provider_category_id = '', 
                        provider_category_name = '', 
                        category_id = '', 
                        payment_data = openapi_client.models.payment_data_dto.PaymentDataDto(
                            payer_name = '', 
                            payer_branch_number = '', 
                            payer_account_number = '', 
                            payer_routing_number = '', 
                            payer_routing_number_ispb = '', 
                            payer_document_number_type = '', 
                            payer_document_number_value = '', 
                            reason = '', 
                            receiver_name = '', 
                            receiver_branch_number = '', 
                            receiver_account_number = '', 
                            receiver_routing_number = '', 
                            receiver_routing_number_ispb = '', 
                            receiver_document_number_type = '', 
                            receiver_document_number_value = '', 
                            payment_method = '', 
                            reference_number = '', 
                            receiver_reference_id = '', ), 
                        credit_card_metadata = openapi_client.models.credit_card_metadata_dto.CreditCardMetadataDto(
                            installment_number = 1.337, 
                            total_installments = 1.337, 
                            total_amount = 1.337, 
                            payee_mcc = 1.337, 
                            card_number = '', 
                            bill_id = '', ), 
                        category_guesses = [
                            openapi_client.models.category_guess_dto.CategoryGuessDto(
                                category_id = '', 
                                name = '', 
                                score = 1.337, 
                                origin = '', )
                            ], 
                        best_guess_category_id = '', )
                    ]
            )
        else:
            return CreateOrUpdateBankTransactionsInBulkRequestDto(
                items = [
                    openapi_client.models.create_or_update_bank_transactions_in_bulk_item_dto.CreateOrUpdateBankTransactionsInBulkItemDto(
                        account_id = '', 
                        provider = '', 
                        workspace_id = '', 
                        provider_transaction_id = '', 
                        description = '', 
                        posted_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        competency_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        amount = 1.337, 
                        type = '', 
                        status = '', 
                        legal_nature = '', 
                        provider_category_id = '', 
                        provider_category_name = '', 
                        category_id = '', 
                        payment_data = openapi_client.models.payment_data_dto.PaymentDataDto(
                            payer_name = '', 
                            payer_branch_number = '', 
                            payer_account_number = '', 
                            payer_routing_number = '', 
                            payer_routing_number_ispb = '', 
                            payer_document_number_type = '', 
                            payer_document_number_value = '', 
                            reason = '', 
                            receiver_name = '', 
                            receiver_branch_number = '', 
                            receiver_account_number = '', 
                            receiver_routing_number = '', 
                            receiver_routing_number_ispb = '', 
                            receiver_document_number_type = '', 
                            receiver_document_number_value = '', 
                            payment_method = '', 
                            reference_number = '', 
                            receiver_reference_id = '', ), 
                        credit_card_metadata = openapi_client.models.credit_card_metadata_dto.CreditCardMetadataDto(
                            installment_number = 1.337, 
                            total_installments = 1.337, 
                            total_amount = 1.337, 
                            payee_mcc = 1.337, 
                            card_number = '', 
                            bill_id = '', ), 
                        category_guesses = [
                            openapi_client.models.category_guess_dto.CategoryGuessDto(
                                category_id = '', 
                                name = '', 
                                score = 1.337, 
                                origin = '', )
                            ], 
                        best_guess_category_id = '', )
                    ],
        )
        """

    def testCreateOrUpdateBankTransactionsInBulkRequestDto(self):
        """Test CreateOrUpdateBankTransactionsInBulkRequestDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
